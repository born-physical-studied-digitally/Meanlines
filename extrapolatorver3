import json
import numpy
import matplotlib.pyplot as plt
import pandas as pd

f = open('/Users/lamsk/Downloads/meanlines.json')
data = json.load(f)

y_coord = []
x_coord = []

for feature in data['features']:
    coord = feature['geometry']['coordinates']
    y_coord.append((coord[0][1], coord[1][1]))


for feature in data['features']:
    coord = feature['geometry']['coordinates']
    x_coord.append(coord[1][0])

y_coord.sort()
print(y_coord)


x_axis = sum(x_coord)/len(x_coord)

slopelst = []
for i in y_coord:
    slope = (i[1]-i[0])/x_axis
    slopelst.append(slope)

slopelstpd = pd.Series(slopelst)
Q1 = slopelstpd.quantile(0.25)
Q3 = slopelstpd.quantile(0.75)
filter_slopelst = slopelstpd[(slopelstpd >= Q1) & (slopelstpd <= Q3)]
# print('filtered slopes',filter_slopelst)
mean_slope = sum(filter_slopelst)/len(filter_slopelst)
print('mean slope', mean_slope)

new_feature = []
new_y_coords = []
for feature in data['features']:
    slope = (feature['geometry']['coordinates'][1][1] - feature['geometry']['coordinates'][0][1])/x_axis
    if slope > mean_slope*0.95 and slope<mean_slope*1.05:
        new_feature.append(feature)
        new_y_coords.append(feature['geometry']['coordinates'][1][1])


intervals = []
for i in range(1, len(y_coord)):
    interval = y_coord[i][1] - y_coord[i-1][1]
    intervals.append(interval)
print('intervals', intervals)
print(y_coord[0][1], y_coord[1][1])

intervals.sort()
listlen = len(intervals)
med_int = 0
if listlen % 2 == 0:
    med_int += (intervals[int(listlen/2)] + intervals[int(listlen/2 + 1)])/2
else:
    med_int += intervals[int((listlen + 1)/2)]
print(med_int)

for i in range(1, len(new_y_coords)):
    count = 0
    if (new_y_coords[i] - new_y_coords[i-1]) >= (med_int*1.1):
        count += 1
        upper = new_feature[i]
        added_coord = [
            [upper['geometry']['coordinates'][0][0], upper['geometry']['coordinates'][0][1] + med_int * count], [upper['geometry']['coordinates'][1][0], upper['geometry']['coordinates'][1][1] + + med_int * count]
        ]
        new_feature.append({'type': 'Feature', 'id': (len(new_y_coords) + i + count), 'geometry': {'type': 'LineString', 'coordinates': added_coord}, 'properties': {}})

for i,feature in enumerate(new_feature):
    feature['id'] = i

print(new_feature)

output_path = '/Users/lamsk/Downloads/meanlines_filtered.json'

with open(output_path,  'w') as f:
    json.dump(data, f, indent= 2)
